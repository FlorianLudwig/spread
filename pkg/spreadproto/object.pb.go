// Code generated by protoc-gen-go.
// source: object.proto
// DO NOT EDIT!

package spreadproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Delta_Status int32

const (
	Delta_ADDED     Delta_Status = 0
	Delta_DELETED   Delta_Status = 1
	Delta_MODIFIED  Delta_Status = 2
	Delta_RENAMED   Delta_Status = 3
	Delta_COPIED    Delta_Status = 4
	Delta_IGNORED   Delta_Status = 5
	Delta_UNTRACKED Delta_Status = 6
)

var Delta_Status_name = map[int32]string{
	0: "ADDED",
	1: "DELETED",
	2: "MODIFIED",
	3: "RENAMED",
	4: "COPIED",
	5: "IGNORED",
	6: "UNTRACKED",
}
var Delta_Status_value = map[string]int32{
	"ADDED":     0,
	"DELETED":   1,
	"MODIFIED":  2,
	"RENAMED":   3,
	"COPIED":    4,
	"IGNORED":   5,
	"UNTRACKED": 6,
}

func (x Delta_Status) String() string {
	return proto.EnumName(Delta_Status_name, int32(x))
}
func (Delta_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

type DiffField_Status int32

const (
	DiffField_ADDED   DiffField_Status = 0
	DiffField_CHANGED DiffField_Status = 1
	DiffField_REMOVED DiffField_Status = 2
)

var DiffField_Status_name = map[int32]string{
	0: "ADDED",
	1: "CHANGED",
	2: "REMOVED",
}
var DiffField_Status_value = map[string]int32{
	"ADDED":   0,
	"CHANGED": 1,
	"REMOVED": 2,
}

func (x DiffField_Status) String() string {
	return proto.EnumName(DiffField_Status_name, int32(x))
}
func (DiffField_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{3, 0} }

type FieldValue_Type int32

const (
	FieldValue_NUMBER FieldValue_Type = 0
	FieldValue_STRING FieldValue_Type = 1
	FieldValue_BOOL   FieldValue_Type = 2
	FieldValue_MAP    FieldValue_Type = 3
	FieldValue_ARRAY  FieldValue_Type = 4
	FieldValue_NULL   FieldValue_Type = 5
)

var FieldValue_Type_name = map[int32]string{
	0: "NUMBER",
	1: "STRING",
	2: "BOOL",
	3: "MAP",
	4: "ARRAY",
	5: "NULL",
}
var FieldValue_Type_value = map[string]int32{
	"NUMBER": 0,
	"STRING": 1,
	"BOOL":   2,
	"MAP":    3,
	"ARRAY":  4,
	"NULL":   5,
}

func (x FieldValue_Type) String() string {
	return proto.EnumName(FieldValue_Type_name, int32(x))
}
func (FieldValue_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{6, 0} }

// Delta is the difference between two objects.
type Delta struct {
	Status  Delta_Status  `protobuf:"varint,1,opt,name=status,enum=spread.Delta_Status" json:"status,omitempty"`
	Summary *DeltaSummary `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	OldName string        `protobuf:"bytes,3,opt,name=oldName" json:"oldName,omitempty"`
	NewName string        `protobuf:"bytes,4,opt,name=newName" json:"newName,omitempty"`
	Fields  []*DiffField  `protobuf:"bytes,5,rep,name=fields" json:"fields,omitempty"`
}

func (m *Delta) Reset()                    { *m = Delta{} }
func (m *Delta) String() string            { return proto.CompactTextString(m) }
func (*Delta) ProtoMessage()               {}
func (*Delta) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Delta) GetSummary() *DeltaSummary {
	if m != nil {
		return m.Summary
	}
	return nil
}

func (m *Delta) GetFields() []*DiffField {
	if m != nil {
		return m.Fields
	}
	return nil
}

// DeltaSummary provides a summary of changes in a delta.
type DeltaSummary struct {
	Added   int64 `protobuf:"varint,1,opt,name=added" json:"added,omitempty"`
	Changed int64 `protobuf:"varint,2,opt,name=changed" json:"changed,omitempty"`
	Removed int64 `protobuf:"varint,3,opt,name=removed" json:"removed,omitempty"`
}

func (m *DeltaSummary) Reset()                    { *m = DeltaSummary{} }
func (m *DeltaSummary) String() string            { return proto.CompactTextString(m) }
func (*DeltaSummary) ProtoMessage()               {}
func (*DeltaSummary) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

// Diff represents the difference between two sets of objects.
type Diff struct {
	Stats  *DiffStats `protobuf:"bytes,1,opt,name=stats" json:"stats,omitempty"`
	Deltas []*Delta   `protobuf:"bytes,2,rep,name=deltas" json:"deltas,omitempty"`
}

func (m *Diff) Reset()                    { *m = Diff{} }
func (m *Diff) String() string            { return proto.CompactTextString(m) }
func (*Diff) ProtoMessage()               {}
func (*Diff) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *Diff) GetStats() *DiffStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *Diff) GetDeltas() []*Delta {
	if m != nil {
		return m.Deltas
	}
	return nil
}

// DiffField represents the difference between two fields.
type DiffField struct {
	Status      DiffField_Status `protobuf:"varint,1,opt,name=status,enum=spread.DiffField_Status" json:"status,omitempty"`
	Key         string           `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	OldValue    *FieldValue      `protobuf:"bytes,3,opt,name=oldValue" json:"oldValue,omitempty"`
	NewValue    *FieldValue      `protobuf:"bytes,4,opt,name=newValue" json:"newValue,omitempty"`
	OldLink     *Link            `protobuf:"bytes,5,opt,name=oldLink" json:"oldLink,omitempty"`
	NewLink     *Link            `protobuf:"bytes,6,opt,name=newLink" json:"newLink,omitempty"`
	LinkChanged bool             `protobuf:"varint,7,opt,name=linkChanged" json:"linkChanged,omitempty"`
	Children    []*DiffField     `protobuf:"bytes,8,rep,name=children" json:"children,omitempty"`
}

func (m *DiffField) Reset()                    { *m = DiffField{} }
func (m *DiffField) String() string            { return proto.CompactTextString(m) }
func (*DiffField) ProtoMessage()               {}
func (*DiffField) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *DiffField) GetOldValue() *FieldValue {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *DiffField) GetNewValue() *FieldValue {
	if m != nil {
		return m.NewValue
	}
	return nil
}

func (m *DiffField) GetOldLink() *Link {
	if m != nil {
		return m.OldLink
	}
	return nil
}

func (m *DiffField) GetNewLink() *Link {
	if m != nil {
		return m.NewLink
	}
	return nil
}

func (m *DiffField) GetChildren() []*DiffField {
	if m != nil {
		return m.Children
	}
	return nil
}

// DiffStats provides a summary of the operations in a diff.
type DiffStats struct {
	ObjectsChanged int64 `protobuf:"varint,1,opt,name=objectsChanged" json:"objectsChanged,omitempty"`
	Insertions     int64 `protobuf:"varint,2,opt,name=insertions" json:"insertions,omitempty"`
	Deletions      int64 `protobuf:"varint,3,opt,name=deletions" json:"deletions,omitempty"`
	Renames        int64 `protobuf:"varint,4,opt,name=renames" json:"renames,omitempty"`
}

func (m *DiffStats) Reset()                    { *m = DiffStats{} }
func (m *DiffStats) String() string            { return proto.CompactTextString(m) }
func (*DiffStats) ProtoMessage()               {}
func (*DiffStats) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

// Field represents a field of an object.
type Field struct {
	Key    string      `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value  *FieldValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Link   *Link       `protobuf:"bytes,3,opt,name=link" json:"link,omitempty"`
	Fields []*Field    `protobuf:"bytes,4,rep,name=fields" json:"fields,omitempty"`
}

func (m *Field) Reset()                    { *m = Field{} }
func (m *Field) String() string            { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()               {}
func (*Field) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *Field) GetValue() *FieldValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Field) GetLink() *Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Field) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

// FieldValue represents the value of a field.
type FieldValue struct {
	Type  FieldValue_Type `protobuf:"varint,1,opt,name=type,enum=spread.FieldValue_Type" json:"type,omitempty"`
	Value string          `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Link  string          `protobuf:"bytes,3,opt,name=link" json:"link,omitempty"`
}

func (m *FieldValue) Reset()                    { *m = FieldValue{} }
func (m *FieldValue) String() string            { return proto.CompactTextString(m) }
func (*FieldValue) ProtoMessage()               {}
func (*FieldValue) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

// Link represents a relationship to another field.
type Link struct {
	// fullIRI is the full representation on an IRI. An IRI is the JSON-LD equivalent of an URL. This string contains the information found the in the following fields.
	FullIRI string `protobuf:"bytes,1,opt,name=fullIRI" json:"fullIRI,omitempty"`
	// repo is the Redspread repository being linked to
	Repo string `protobuf:"bytes,2,opt,name=repo" json:"repo,omitempty"`
	// oid is the Git object id of the commit or tree being linked to
	Oid string `protobuf:"bytes,3,opt,name=oid" json:"oid,omitempty"`
	// path is full name of the object within a repository
	Path string `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
}

func (m *Link) Reset()                    { *m = Link{} }
func (m *Link) String() string            { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()               {}
func (*Link) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

// Object holds a representation of a Kubernetes object.
type Object struct {
	Name   string      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Info   *ObjectInfo `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	Fields []*Field    `protobuf:"bytes,3,rep,name=fields" json:"fields,omitempty"`
}

func (m *Object) Reset()                    { *m = Object{} }
func (m *Object) String() string            { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()               {}
func (*Object) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *Object) GetInfo() *ObjectInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Object) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

// ObjectInfo provides metadata about an object.
type ObjectInfo struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *ObjectInfo) Reset()                    { *m = ObjectInfo{} }
func (m *ObjectInfo) String() string            { return proto.CompactTextString(m) }
func (*ObjectInfo) ProtoMessage()               {}
func (*ObjectInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func init() {
	proto.RegisterType((*Delta)(nil), "spread.Delta")
	proto.RegisterType((*DeltaSummary)(nil), "spread.DeltaSummary")
	proto.RegisterType((*Diff)(nil), "spread.Diff")
	proto.RegisterType((*DiffField)(nil), "spread.DiffField")
	proto.RegisterType((*DiffStats)(nil), "spread.DiffStats")
	proto.RegisterType((*Field)(nil), "spread.Field")
	proto.RegisterType((*FieldValue)(nil), "spread.FieldValue")
	proto.RegisterType((*Link)(nil), "spread.Link")
	proto.RegisterType((*Object)(nil), "spread.Object")
	proto.RegisterType((*ObjectInfo)(nil), "spread.ObjectInfo")
	proto.RegisterEnum("spread.Delta_Status", Delta_Status_name, Delta_Status_value)
	proto.RegisterEnum("spread.DiffField_Status", DiffField_Status_name, DiffField_Status_value)
	proto.RegisterEnum("spread.FieldValue_Type", FieldValue_Type_name, FieldValue_Type_value)
}

var fileDescriptor2 = []byte{
	// 661 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0xf1, 0x25, 0xf6, 0x38, 0x29, 0xed, 0x82, 0xc0, 0xaa, 0x54, 0x29, 0x18, 0x2a, 0xf5,
	0x85, 0x3c, 0x94, 0x0f, 0x00, 0x37, 0x4e, 0x83, 0x45, 0x62, 0x57, 0x6e, 0x5a, 0x04, 0x3c, 0xb9,
	0xf1, 0x86, 0x9a, 0x3a, 0x76, 0x64, 0x3b, 0x45, 0xfd, 0x13, 0x7e, 0x84, 0xdf, 0x43, 0xcc, 0xee,
	0xda, 0xbd, 0xa4, 0xcd, 0x93, 0xb3, 0x73, 0xce, 0xce, 0xec, 0x9c, 0x33, 0x13, 0xe8, 0xe4, 0x17,
	0xbf, 0xe8, 0xac, 0xea, 0x2f, 0x8b, 0xbc, 0xca, 0x89, 0x56, 0x2e, 0x0b, 0x1a, 0xc5, 0xf6, 0x3f,
	0x09, 0x54, 0x97, 0xa6, 0x55, 0x44, 0xde, 0x81, 0x56, 0x56, 0x51, 0xb5, 0x2a, 0x2d, 0xa9, 0x27,
	0x1d, 0x6c, 0x1d, 0xbe, 0xec, 0x0b, 0x4a, 0x9f, 0xc3, 0xfd, 0x53, 0x8e, 0x91, 0x7d, 0x68, 0x97,
	0xab, 0xc5, 0x22, 0x2a, 0x6e, 0xac, 0x16, 0xd2, 0xcc, 0x35, 0xda, 0xa9, 0xc0, 0xc8, 0x73, 0x68,
	0xe7, 0x69, 0xec, 0x47, 0x0b, 0x6a, 0xc9, 0x48, 0x33, 0x58, 0x20, 0xa3, 0xbf, 0x79, 0x40, 0xe1,
	0x81, 0x37, 0xa0, 0xcd, 0x13, 0x9a, 0xc6, 0xa5, 0xa5, 0xf6, 0x64, 0xcc, 0xb3, 0x73, 0x9b, 0x27,
	0x99, 0xcf, 0x8f, 0x19, 0x62, 0xcf, 0x40, 0xab, 0xab, 0x1a, 0xa0, 0x3a, 0xae, 0x3b, 0x74, 0xb7,
	0x9f, 0x11, 0x13, 0xda, 0xee, 0x70, 0x3c, 0x9c, 0xe2, 0x41, 0x22, 0x1d, 0xd0, 0x27, 0x81, 0xeb,
	0x1d, 0x7b, 0x78, 0x6a, 0x31, 0x28, 0x1c, 0xfa, 0xce, 0x04, 0x0f, 0x32, 0x01, 0xd0, 0x06, 0xc1,
	0x09, 0x03, 0x14, 0x06, 0x78, 0x23, 0x3f, 0x08, 0xf1, 0xa0, 0x92, 0x2e, 0x18, 0x67, 0xfe, 0x34,
	0x74, 0x06, 0x5f, 0xf0, 0xa8, 0xd9, 0x1f, 0xa1, 0xf3, 0xe0, 0xe5, 0x5d, 0x50, 0xa3, 0x38, 0xa6,
	0x31, 0x57, 0x41, 0x66, 0xef, 0x9e, 0x5d, 0x46, 0xd9, 0x4f, 0x0c, 0xb4, 0x9a, 0x40, 0x41, 0x17,
	0xf9, 0x35, 0x06, 0x58, 0x67, 0xb2, 0x3d, 0x02, 0x85, 0x3d, 0x99, 0xf4, 0x40, 0x65, 0xfa, 0x09,
	0xf9, 0xd6, 0xfa, 0x61, 0x6d, 0x94, 0x64, 0x0f, 0xb4, 0x98, 0x95, 0x2a, 0x31, 0x15, 0x6b, 0xb9,
	0xfb, 0x40, 0x3a, 0xfb, 0x6f, 0x0b, 0x8c, 0xdb, 0xe6, 0xc9, 0xc1, 0x9a, 0x1d, 0xd6, 0x23, 0x7d,
	0x1a, 0x4b, 0x4c, 0x90, 0xaf, 0xa8, 0xb0, 0xc3, 0x40, 0x17, 0x75, 0x14, 0xfe, 0x3c, 0x4a, 0x57,
	0x42, 0x79, 0xf3, 0x90, 0x34, 0x17, 0xf9, 0x25, 0x8e, 0x30, 0x16, 0xba, 0x21, 0x58, 0xca, 0x46,
	0xd6, 0x1e, 0x37, 0x71, 0x9c, 0x64, 0x57, 0xe8, 0x11, 0x23, 0x75, 0x1a, 0x12, 0x8b, 0x31, 0x18,
	0x93, 0x70, 0x58, 0x7b, 0x02, 0x7e, 0x01, 0x66, 0x8a, 0xdf, 0x41, 0xad, 0x5e, 0x1b, 0x29, 0x3a,
	0x79, 0x0b, 0xfa, 0xec, 0x32, 0x49, 0xe3, 0x82, 0x66, 0x96, 0xbe, 0xc9, 0xf7, 0xf7, 0x1b, 0x7c,
	0x1f, 0x7c, 0x76, 0xfc, 0x11, 0xf7, 0x9d, 0x3b, 0x3d, 0x09, 0xce, 0x99, 0xed, 0xf6, 0x0f, 0x21,
	0x9b, 0xd0, 0xf8, 0x15, 0x6c, 0x89, 0x39, 0x2f, 0x9b, 0xc2, 0xc2, 0x47, 0x9c, 0x87, 0x24, 0x2b,
	0x69, 0x51, 0x25, 0x79, 0x56, 0xd6, 0x56, 0xee, 0x80, 0x81, 0x7e, 0x50, 0x11, 0x92, 0xef, 0xdc,
	0xcd, 0x70, 0x4a, 0x4b, 0xae, 0x8b, 0x6c, 0x17, 0xa0, 0x0a, 0x3f, 0x6a, 0x95, 0xa5, 0x7a, 0x78,
	0xd5, 0x6b, 0x2e, 0x5e, 0x6b, 0xa3, 0x78, 0xbb, 0xa0, 0xb0, 0xf6, 0x6b, 0x13, 0xd6, 0x95, 0x6b,
	0x66, 0x5f, 0x79, 0x38, 0x08, 0xa2, 0xff, 0x3f, 0x12, 0xc0, 0xbd, 0x4c, 0xfb, 0xa0, 0x54, 0x37,
	0x4b, 0x5a, 0xcf, 0xc1, 0xeb, 0xc7, 0xb5, 0xfa, 0x53, 0x84, 0xd9, 0xe0, 0xde, 0xbd, 0xc9, 0xc0,
	0xd5, 0xb8, 0xab, 0x6f, 0xd8, 0xc7, 0xa0, 0x70, 0x12, 0x6e, 0x85, 0x7f, 0x36, 0x39, 0x1a, 0x86,
	0xa8, 0x28, 0xfe, 0x3e, 0x9d, 0x86, 0x9e, 0x3f, 0x42, 0x41, 0x75, 0x50, 0x8e, 0x82, 0x60, 0x8c,
	0x4b, 0xd4, 0x06, 0x79, 0xe2, 0x9c, 0xe0, 0x02, 0x31, 0xed, 0xc3, 0xd0, 0xf9, 0x86, 0xfb, 0x83,
	0xa8, 0x7f, 0x36, 0x1e, 0x6f, 0xab, 0xf6, 0x27, 0x50, 0x78, 0x07, 0xa8, 0xd3, 0x7c, 0x95, 0xa6,
	0x5e, 0xe8, 0xd5, 0x8a, 0x60, 0xb9, 0x82, 0x2e, 0xf3, 0xba, 0x38, 0x8a, 0x95, 0x27, 0x71, 0xbd,
	0xfa, 0x08, 0x2d, 0xa3, 0xea, 0x52, 0xec, 0xbd, 0xfd, 0x15, 0xb4, 0x80, 0x1b, 0xc4, 0xe2, 0x4c,
	0xe9, 0x3a, 0x41, 0x0f, 0x94, 0x24, 0x9b, 0xe7, 0xeb, 0x8a, 0x0a, 0xae, 0x87, 0xc8, 0x3d, 0xd5,
	0xe4, 0xa7, 0x54, 0xdb, 0x05, 0xb8, 0x47, 0x6e, 0x8a, 0xf2, 0xe4, 0x47, 0xdd, 0xef, 0xa6, 0xe0,
	0xf2, 0x3f, 0xbf, 0x0b, 0x8d, 0x7f, 0x3e, 0xfc, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x46, 0xe4, 0x99,
	0xf9, 0x13, 0x05, 0x00, 0x00,
}
